version: '3.6'
services:

  wordpress:
    image: wordpress:latest
    #container_name: $COMPOSE_PROJECT_NAME
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
        - 80
    depends_on:
      - db
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
    volumes:
      - /srv/docker-data/${COMPOSE_PROJECT_NAME}/www:/var/www/html
    networks:
      - proxy
      - wordpress_net
    configs:
      - source: php-upload-size
        target: /usr/local/etc/php/conf.d/uploads.ini

    labels:
      - "traefik.enable=true"
      - "traefik.http.services.wordpress-${COMPOSE_PROJECT_NAME}.loadbalancer.passhostheader=true"
      - "traefik.http.routers.wordpress-${COMPOSE_PROJECT_NAME}.service=wordpress-${COMPOSE_PROJECT_NAME}"  # the router called wordpress-project will use a service called project
      - "traefik.http.routers.wordpress-${COMPOSE_PROJECT_NAME}.entrypoints=http" # the router wordpress-project will handle http traffic
      - "traefik.http.routers.wordpress-${COMPOSE_PROJECT_NAME}.rule=Host(`${SITE_DOMAIN}`)" # the router wordpress-project will handle traffic from domain SITE_DOMAIN
      
      - "traefik.http.middlewares.wordpress-${COMPOSE_PROJECT_NAME}-https-redirect.redirectscheme.scheme=https" # there will be a middleware called wordpress-project-https-redirect to secure http traffic
   
      - "traefik.http.routers.wordpress-${COMPOSE_PROJECT_NAME}.middlewares=wordpress-${COMPOSE_PROJECT_NAME}-https-redirect" # the router wordpress-project will make use of the middleware wordpress-project-https-redirect
      
      - "traefik.http.routers.wordpress-${COMPOSE_PROJECT_NAME}-secure.entrypoints=https" # the router wordpress-project-secure will handle https
      - "traefik.http.routers.wordpress-${COMPOSE_PROJECT_NAME}-secure.rule=Host(`${SITE_DOMAIN}`)" #the router wordpress-project-secure will handle SITE_DOMAIN
      - "traefik.http.routers.wordpress-${COMPOSE_PROJECT_NAME}-secure.tls=true" # the router wordpress-project-secure will use TLS
      - "traefik.http.routers.wordpress-${COMPOSE_PROJECT_NAME}-secure.tls.certresolver=http" #the router will use a certificate resolver
      - "traefik.http.routers.wordpress-${COMPOSE_PROJECT_NAME}-secure.service=wordpress-${COMPOSE_PROJECT_NAME}" #the router will use a service called project
      - "traefik.docker.network=proxy"

  db:
    image: mysql:5.7
    #container_name: ${COMPOSE_PROJECT_NAME}_db
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    expose:
      - 3306
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
      MYSQL_RANDOM_ROOT_PASSWORD: '1'
    volumes:
      - /srv/docker-data/$COMPOSE_PROJECT_NAME/db:/var/lib/mysql:rw
    networks:
      - wordpress_net
      
networks:
  proxy:
    external: true
 #     name: proxy
  wordpress_net:
  
configs:
  php-upload-size: 
    file: ./php-conf/uploads.ini
